{"version":3,"file":"static/js/251.9bac6f35.chunk.js","mappings":"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","sources":["webpack://project-5-frontend/./src/components/User/CalendarToolbar/PeriodPaginator/PeriodPaginator.module.css?6171","components/User/CalendarToolbar/PeriodPaginator/PeriodPaginator.js","webpack://project-5-frontend/./src/components/User/UserStatistics/UserStatistics.module.css?91f1","components/User/CalendarPopup/CalendarPopup.js","components/User/UserStatistics/UserStatistics.js","webpack://project-5-frontend/./src/pages/StatisticsPage/StatisticPage.module.css?525e","pages/StatisticsPage/StatisticsPage.js","redux/Tasks/selectors.js","webpack://project-5-frontend/./src/components/Calendar/CalendarPicker/index.module.css?2b47"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginatorBox\":\"PeriodPaginator_paginatorBox__0SKjQ\",\"btnLeft\":\"PeriodPaginator_btnLeft__PX-LE\",\"btnRight\":\"PeriodPaginator_btnRight__T8Hvd\",\"iconPaginator\":\"PeriodPaginator_iconPaginator__q9VQu\"};","import { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\nimport css from './PeriodPaginator.module.css';\n\n\nexport default function PeriodPaginator({ leftClick, rightClick, page }) {\n  return (\n  <div className={css.paginatorBox} id={page}>\n    <button aria-label='Period calendar paginator button left'\n            type='button'\n            className={css.btnLeft}\n            onClick={leftClick}\n    >\n      <AiOutlineLeft className={css.iconPaginator} />\n    </button>\n    <button aria-label='Period calendar paginator button right'\n            type='button'\n            className={css.btnRight}\n            onClick={rightClick}\n    >\n      <AiOutlineRight className={css.iconPaginator} />\n    </button>\n  </div>);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserStatistics_container__HcnE2\",\"header\":\"UserStatistics_header__d55p0\",\"circleTextBlock\":\"UserStatistics_circleTextBlock__fPM55\",\"textBy\":\"UserStatistics_textBy__0RZSC\",\"circlePink\":\"UserStatistics_circlePink__Aim81\",\"circleBlue\":\"UserStatistics_circleBlue__DnS3x\",\"chartBlock\":\"UserStatistics_chartBlock__5ahwl\",\"tasks\":\"UserStatistics_tasks__JgCT-\",\"textChart\":\"UserStatistics_textChart__VEZQA\",\"textFilter\":\"UserStatistics_textFilter__fP3iQ\"};","import 'react-datepicker/dist/react-datepicker.css';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport React, { forwardRef, useRef } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport moment from 'moment';\nimport css from '../../../components/Calendar/CalendarPicker/index.module.css';\nimport PeriodPaginator from '../CalendarToolbar/PeriodPaginator/PeriodPaginator';\nimport en from 'date-fns/locale/en-GB';\nimport { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\n\nregisterLocale('en', en);\nexport const CalendarDropdown = ({ day, setDay }) => {\n  const ref = useRef(null);\n\n  const setStyles = (e) => {\n    e.target.value !== undefined && setTimeout(() => {\n      const [month] = document.querySelectorAll('.react-datepicker__month-container');\n      const [children] = document.querySelectorAll('.react-datepicker__children-container');\n      const [header] = month.querySelectorAll('.react-datepicker__header');\n      const daysName = month.querySelectorAll('.react-datepicker__day-name');\n      const weekdays = month.querySelectorAll('.weekday');\n      if (header) {\n        header.style.backgroundColor = '#3e85f3';\n        header.style.borderBottom = '1px solid #fff';\n        header.style.margin = '12px';\n      }\n      if (children) {\n        children.style.width = '100%';\n      }\n      if (daysName) {\n        Array.from(daysName).forEach(day => {\n          day.style.color = '#fff';\n        });\n      }\n      if (weekdays) {\n        Array.from(weekdays).forEach(weekday => {\n          const div = weekday.querySelector('div');\n          div.style.fontWeight = '400';\n        });\n      }\n    });\n  };\n\n  const renderMonthContent = (month, shortMonth) => {\n    return (\n      <div className={css.month}>\n        {shortMonth}\n      </div>\n    );\n  };\n\n  const renderDayContent = day => {\n    return (\n      <div className={css.day}>\n        {day}\n      </div>\n    );\n  };\n\n  const renderHeaderContent = ({\n                                 date,\n                                 decreaseMonth,\n                                 increaseMonth,\n                                 prevMonthButtonDisabled,\n                                 nextMonthButtonDisabled,\n                               }) => {\n    return (\n      <div className={css.header}>\n        <button\n          className={css.button}\n          onClick={decreaseMonth}\n          disabled={prevMonthButtonDisabled}>\n          <AiOutlineLeft />\n        </button>\n        {day && <>{moment(date).format('MMMM YYYY').toUpperCase()}</>}\n        <button\n          className={css.button}\n          onClick={increaseMonth}\n          disabled={nextMonthButtonDisabled}>\n          <AiOutlineRight />\n        </button>\n      </div>\n    );\n  };\n\n  const leftClick = () => {\n    setDay(moment(day).subtract(1, 'day'));\n  };\n\n  const rightClick = () => {\n    setDay(moment(day).add(1, 'day'));\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <div className={css.picker}>\n      <button className={css.customInput} onClick={onClick} ref={ref}>\n        {value}\n      </button>\n      <PeriodPaginator\n        leftClick={leftClick}\n        rightClick={rightClick} />\n    </div>\n  ));\n\n  return (\n    <div onClick={setStyles}>\n      <DatePicker\n        ref={ref}\n        dayClassName={(date) => {\n          const isWeekDay = moment(date).isoWeekday() === 6 || moment(date).isoWeekday() === 7;\n          return isWeekDay ? 'weekday' : undefined;\n        }}\n        locale='en'\n        fixedHeight\n        showPopperArrow={false}\n        selected={new Date(day)}\n        onChange={date => setDay(moment(date))}\n        customInput={<CustomInput />}\n        calendarClassName={css.calendar}\n        renderDayContents={renderDayContent}\n        dateFormat='d MMMM yyyy'\n        renderMonthContent={renderMonthContent}\n        renderCustomHeader={renderHeaderContent}\n      >\n        <div className={css.today} onClick={() => {\n          setDay(moment());\n          ref.current?.setOpen(false);\n        }}>\n          TODAY\n        </div>\n      </DatePicker>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n} from 'recharts';\n\nimport css from './UserStatistics.module.css';\nimport { CalendarDropdown } from '../CalendarPopup/CalendarPopup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTasks } from 'redux/Tasks/selectors';\nimport { getTasks } from 'redux/Tasks/operations';\n\n//gradient for chart\nconst gradientPink = (\n  <linearGradient id=\"barGradientPink\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n    <stop offset=\"0%\" stopColor=\"#ffffff\" />\n    <stop offset=\"100%\" stopColor=\"#FFD2DD\" />\n  </linearGradient>\n);\n\n//gradient for chart\nconst gradientBlue = (\n  <linearGradient id=\"barGradientBlue\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n    <stop offset=\"0%\" stopColor=\"#ffffff\" />\n    <stop offset=\"100%\" stopColor=\"#3E85F3\" />\n  </linearGradient>\n);\n\n//rounded bar for chart\nconst RoundedBar = props => {\n  const { x, y, width, height, fill } = props;\n  const borderRadius = 6;\n\n  return (\n    <g><rect x={x} y={y} width={width} height={height} fill={fill} rx={borderRadius} ry={borderRadius} /></g>\n  );\n};\n\n//Stats chart\nexport const StatisticsChart = ({ day, setDay }) => {\n  // Компонент отримує moment day\n  const [chartWidth, setChartWidth] = useState(280);\n  const [chartHeight, setChartHeight] = useState(266);\n  const [barSize, setBarSize] = useState(22);\n  const [barGap, setBarGap] = useState(8);\n  const [barCategoryGap, setBarCategoryGap] = useState(30);\n\n  const dispatch = useDispatch();\n  const tasks = useSelector(selectTasks);\n\n  const chosenDate = day.format('YYYY-MM-DD');\n  const chosenMonth = day.format('YYYY-MM');\n\n  let tasksByDay = 0;\n  let tasksByDay_cat_todo = 0;\n  let tasksByDay_cat_inprogress = 0;\n  let tasksByDay_cat_done = 0;\n\n  let tasksByMonth = 0;\n  let tasksByMonth_cat_todo = 0;\n  let tasksByMonth_cat_inprogress = 0;\n  let tasksByMonth_cat_done = 0;\n  \n  tasks.map(task => {\n    let formattedTaskDate = task.date.split('T')[0];\n    let formattedTaskMonth = formattedTaskDate.slice(0, 7);\n    if (formattedTaskDate === chosenDate) {\n      tasksByDay++;\n      switch (task.category) {\n        case 'in-progress': tasksByDay_cat_inprogress++; break;\n        case 'done': tasksByDay_cat_done++; break;\n        default: tasksByDay_cat_todo++; break;\n      }\n    }\n    if (formattedTaskMonth === chosenMonth) {\n      tasksByMonth++;\n      switch (task.category) {\n        case 'in-progress': tasksByMonth_cat_inprogress++; break;\n        case 'done': tasksByMonth_cat_done++; break;\n        default: tasksByMonth_cat_todo++; break;\n      }\n    }\n    return task\n  });\n\n  if (tasksByDay < 1) {\n    tasksByDay = 1;\n  }\n  if (tasksByMonth < 1) {\n    tasksByMonth = 1;\n  }\n\n  let tasksByDay_cat_todo_percentage = tasksByDay_cat_todo * 100 / tasksByDay;\n  let tasksByDay_cat_inprogress_percentage = tasksByDay_cat_inprogress * 100 / tasksByDay;\n  let tasksByDay_cat_done_percentage = tasksByDay_cat_done * 100 / tasksByDay;\n\n  let tasksByMonth_cat_todo_percentage = tasksByMonth_cat_todo * 100 / tasksByMonth;\n  let tasksByMonth_cat_inprogress_percentage = tasksByMonth_cat_inprogress * 100 / tasksByMonth;\n  let tasksByMonth_cat_done_percentage = tasksByMonth_cat_done * 100 / tasksByMonth;\n\n  const data = [\n    { name: 'To Do', month: tasksByMonth_cat_todo_percentage, day: tasksByDay_cat_todo_percentage },\n    { name: 'In Progress', month: tasksByMonth_cat_inprogress_percentage, day: tasksByDay_cat_inprogress_percentage },\n    { name: 'Done', month: tasksByMonth_cat_done_percentage, day: tasksByDay_cat_done_percentage },\n  ];\n\n  // Update chart dimensions based on screen width\n  useEffect(() => {\n    dispatch(getTasks());\n\n    const updateDimensions = () => {\n      const screenWidth = window.innerWidth;\n      if (screenWidth < 375) {\n        setChartWidth(280);\n        setChartHeight(330);\n        setBarSize(22);\n        setBarGap(8);\n        setBarCategoryGap(30);\n      } else if (screenWidth >= 768 && screenWidth < 1440) {\n        setChartWidth(580);\n        setChartHeight(360);\n        setBarSize(27);\n        setBarGap(14);\n        setBarCategoryGap(130);\n      } else if (screenWidth > 1440) {\n        setChartWidth(780);\n        setChartHeight(350);\n        setBarSize(27);\n        setBarGap(14);\n        setBarCategoryGap(170);\n      }\n    };\n\n    // Event listener to window resize\n    window.addEventListener('resize', updateDimensions);\n\n    // Initial dimensions\n    updateDimensions();\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className={css.container}>\n        <div className={css.header}>\n          <CalendarDropdown day={day} setDay={setDay} />\n          <div className={css.textFilter}>\n            <div className={css.circleTextBlock}>\n              <div className={css.circlePink}></div>\n              <p className={css.textBy}>By Day</p>\n            </div>\n\n            <div className={css.circleTextBlock}>\n              <div className={css.circleBlue}></div>\n              <p className={css.textBy}>By Month</p>\n            </div>\n          </div>\n        </div>\n        <div className={css.chartBlock}>\n          <p className={css.tasks}>Tasks</p>\n          <BarChart\n            className={css.textChart}\n            width={chartWidth}\n            height={chartHeight}\n            data={data}\n            barSize={barSize}\n            barGap={barGap}\n            barCategoryGap={barCategoryGap}\n          >\n            <defs>{gradientPink}</defs>\n            <defs>{gradientBlue}</defs>\n            <CartesianGrid stroke=\"#E3F3FF\" />\n            <CartesianGrid vertical={false} />\n\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Bar\n              dataKey=\"day\"\n              fill=\"url(#barGradientPink)\"\n              shape={<RoundedBar />}\n            />\n            <Bar\n              dataKey=\"month\"\n              fill=\"url(#barGradientBlue)\"\n              shape={<RoundedBar />}\n            />\n          </BarChart>\n        </div>\n      </div>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"StatisticPage_section__OxYnh\",\"boxToolbar\":\"StatisticPage_boxToolbar__Yj+6F\"};","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { currentPage } from 'redux/actions';\nimport { StatisticsChart } from 'components/User/UserStatistics/UserStatistics';\nimport css from './StatisticPage.module.css';\nimport moment from 'moment';\n\nconst StatisticsPage = () => {\n  const dispatch = useDispatch();\n  const [day, setDay] = useState(moment());\n\n  useEffect(() => {\n    dispatch(currentPage('Statistics'));\n  }, [dispatch]);\n\n  return (\n    <section className={css.section}>\n      <StatisticsChart day={day} setDay={setDay}/>\n    </section>\n  );\n};\n\nexport default StatisticsPage;\n","export const selectTasks = state => state.tasks.tasks;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectErrorMessage = state => state.tasks.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"picker\":\"CalendarPicker_picker__pcSgn\",\"header\":\"CalendarPicker_header__dc+1X\",\"dropdown\":\"CalendarPicker_dropdown__EONjz\",\"button\":\"CalendarPicker_button__S-fWH\",\"today\":\"CalendarPicker_today__-76C7\",\"customInput\":\"CalendarPicker_customInput__Tx5li\",\"calendar\":\"CalendarPicker_calendar__3CMGl\",\"month\":\"CalendarPicker_month__rYJCY\",\"day\":\"CalendarPicker_day__bJBSi\"};"],"names":["PeriodPaginator","leftClick","rightClick","page","className","css","id","type","onClick","registerLocale","en","CalendarDropdown","day","setDay","ref","useRef","moment","subtract","add","CustomInput","forwardRef","value","e","undefined","target","setTimeout","document","querySelectorAll","month","children","header","daysName","weekdays","style","backgroundColor","borderBottom","margin","width","Array","from","forEach","color","weekday","querySelector","fontWeight","dayClassName","date","isoWeekday","locale","fixedHeight","showPopperArrow","selected","Date","onChange","customInput","calendarClassName","renderDayContents","dateFormat","renderMonthContent","shortMonth","renderCustomHeader","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","disabled","format","toUpperCase","current","setOpen","gradientPink","x1","y1","x2","y2","offset","stopColor","gradientBlue","RoundedBar","props","x","y","height","fill","rx","ry","StatisticsChart","useState","chartWidth","setChartWidth","chartHeight","setChartHeight","barSize","setBarSize","barGap","setBarGap","barCategoryGap","setBarCategoryGap","dispatch","useDispatch","tasks","useSelector","selectTasks","chosenDate","chosenMonth","tasksByDay","tasksByDay_cat_todo","tasksByDay_cat_inprogress","tasksByDay_cat_done","tasksByMonth","tasksByMonth_cat_todo","tasksByMonth_cat_inprogress","tasksByMonth_cat_done","map","task","formattedTaskDate","split","formattedTaskMonth","slice","category","data","name","useEffect","getTasks","updateDimensions","screenWidth","window","innerWidth","addEventListener","removeEventListener","BarChart","CartesianGrid","stroke","vertical","XAxis","dataKey","YAxis","Bar","shape","currentPage","state"],"sourceRoot":""}